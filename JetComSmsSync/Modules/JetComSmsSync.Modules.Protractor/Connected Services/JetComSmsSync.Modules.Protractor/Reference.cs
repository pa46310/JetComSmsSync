//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JetComSmsSync.Modules.Protractor
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://metaphorix.com/", ConfigurationName="JetComSmsSync.Modules.Protractor.ProtractorServiceSoap")]
    public interface ProtractorServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/UpdateLiveDataWithVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateLiveDataWithVersion(JetComSmsSync.Modules.Protractor.UpdateLiveDataWithVersionDtTable DtTable, string version, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/UpdateLiveDataWithVersion", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateLiveDataWithVersionAsync(JetComSmsSync.Modules.Protractor.UpdateLiveDataWithVersionDtTable DtTable, string version, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/UpdateLiveData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateLiveData(JetComSmsSync.Modules.Protractor.UpdateLiveDataDtTable DtTable, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/UpdateLiveData", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateLiveDataAsync(JetComSmsSync.Modules.Protractor.UpdateLiveDataDtTable DtTable, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetTableForUpdateWithBigId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        JetComSmsSync.Modules.Protractor.GetTableForUpdateWithBigIdResponseGetTableForUpdateWithBigIdResult GetTableForUpdateWithBigId(string BigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetTableForUpdateWithBigId", ReplyAction="*")]
        System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetTableForUpdateWithBigIdResponseGetTableForUpdateWithBigIdResult> GetTableForUpdateWithBigIdAsync(string BigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetTransferedTablesDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        JetComSmsSync.Modules.Protractor.GetTransferedTablesDetailsResponseGetTransferedTablesDetailsResult GetTransferedTablesDetails(string BigId, int singleKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetTransferedTablesDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetTransferedTablesDetailsResponseGetTransferedTablesDetailsResult> GetTransferedTablesDetailsAsync(string BigId, int singleKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetAllTempTableRecordsOfBigId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        JetComSmsSync.Modules.Protractor.GetAllTempTableRecordsOfBigIdResponseGetAllTempTableRecordsOfBigIdResult GetAllTempTableRecordsOfBigId(string tblname, string BigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetAllTempTableRecordsOfBigId", ReplyAction="*")]
        System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetAllTempTableRecordsOfBigIdResponseGetAllTempTableRecordsOfBigIdResult> GetAllTempTableRecordsOfBigIdAsync(string tblname, string BigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetAllTempTableRecordsOfBigIdWithKeys", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        JetComSmsSync.Modules.Protractor.GetAllTempTableRecordsOfBigIdWithKeysResponseGetAllTempTableRecordsOfBigIdWithKeysResult GetAllTempTableRecordsOfBigIdWithKeys(string tblname, string BigId, string compareKeys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetAllTempTableRecordsOfBigIdWithKeys", ReplyAction="*")]
        System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetAllTempTableRecordsOfBigIdWithKeysResponseGetAllTempTableRecordsOfBigIdWithKeysResult> GetAllTempTableRecordsOfBigIdWithKeysAsync(string tblname, string BigId, string compareKeys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/ExecuteQueryWithOutCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ExecuteQueryWithOutCheck(string strQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/ExecuteQueryWithOutCheck", ReplyAction="*")]
        System.Threading.Tasks.Task ExecuteQueryWithOutCheckAsync(string strQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        JetComSmsSync.Modules.Protractor.GetQueriesResponseGetQueriesResult GetQueries(string AccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetQueries", ReplyAction="*")]
        System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetQueriesResponseGetQueriesResult> GetQueriesAsync(string AccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetAccountIDInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        JetComSmsSync.Modules.Protractor.GetAccountIDInfoResponseGetAccountIDInfoResult GetAccountIDInfo(string BigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetAccountIDInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetAccountIDInfoResponseGetAccountIDInfoResult> GetAccountIDInfoAsync(string BigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/ValidateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidateAccount(string BidId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/ValidateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidateAccountAsync(string BidId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetConnectionIDAndAPIKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        JetComSmsSync.Modules.Protractor.GetConnectionIDAndAPIKeyResponseGetConnectionIDAndAPIKeyResult GetConnectionIDAndAPIKey(string BigID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetConnectionIDAndAPIKey", ReplyAction="*")]
        System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetConnectionIDAndAPIKeyResponseGetConnectionIDAndAPIKeyResult> GetConnectionIDAndAPIKeyAsync(string BigID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetLatestStartAndEndDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        JetComSmsSync.Modules.Protractor.GetLatestStartAndEndDateResponseGetLatestStartAndEndDateResult GetLatestStartAndEndDate(string BigID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetLatestStartAndEndDate", ReplyAction="*")]
        System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetLatestStartAndEndDateResponseGetLatestStartAndEndDateResult> GetLatestStartAndEndDateAsync(string BigID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetAccountIDDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        JetComSmsSync.Modules.Protractor.GetAccountIDDetailResponseGetAccountIDDetailResult GetAccountIDDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://metaphorix.com/GetAccountIDDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetAccountIDDetailResponseGetAccountIDDetailResult> GetAccountIDDetailAsync();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class UpdateLiveDataWithVersionDtTable
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class UpdateLiveDataDtTable
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class GetTableForUpdateWithBigIdResponseGetTableForUpdateWithBigIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class GetTransferedTablesDetailsResponseGetTransferedTablesDetailsResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class GetAllTempTableRecordsOfBigIdResponseGetAllTempTableRecordsOfBigIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class GetAllTempTableRecordsOfBigIdWithKeysResponseGetAllTempTableRecordsOfBigIdWithKeysResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class GetQueriesResponseGetQueriesResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class GetAccountIDInfoResponseGetAccountIDInfoResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class GetConnectionIDAndAPIKeyResponseGetConnectionIDAndAPIKeyResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class GetLatestStartAndEndDateResponseGetLatestStartAndEndDateResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://metaphorix.com/")]
    public partial class GetAccountIDDetailResponseGetAccountIDDetailResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface ProtractorServiceSoapChannel : JetComSmsSync.Modules.Protractor.ProtractorServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class ProtractorServiceSoapClient : System.ServiceModel.ClientBase<JetComSmsSync.Modules.Protractor.ProtractorServiceSoap>, JetComSmsSync.Modules.Protractor.ProtractorServiceSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ProtractorServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ProtractorServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), ProtractorServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ProtractorServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ProtractorServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ProtractorServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ProtractorServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ProtractorServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public void UpdateLiveDataWithVersion(JetComSmsSync.Modules.Protractor.UpdateLiveDataWithVersionDtTable DtTable, string version, System.DateTime startdate, System.DateTime enddate)
        {
            base.Channel.UpdateLiveDataWithVersion(DtTable, version, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task UpdateLiveDataWithVersionAsync(JetComSmsSync.Modules.Protractor.UpdateLiveDataWithVersionDtTable DtTable, string version, System.DateTime startdate, System.DateTime enddate)
        {
            return base.Channel.UpdateLiveDataWithVersionAsync(DtTable, version, startdate, enddate);
        }
        
        public void UpdateLiveData(JetComSmsSync.Modules.Protractor.UpdateLiveDataDtTable DtTable, System.DateTime startdate, System.DateTime enddate)
        {
            base.Channel.UpdateLiveData(DtTable, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task UpdateLiveDataAsync(JetComSmsSync.Modules.Protractor.UpdateLiveDataDtTable DtTable, System.DateTime startdate, System.DateTime enddate)
        {
            return base.Channel.UpdateLiveDataAsync(DtTable, startdate, enddate);
        }
        
        public JetComSmsSync.Modules.Protractor.GetTableForUpdateWithBigIdResponseGetTableForUpdateWithBigIdResult GetTableForUpdateWithBigId(string BigId)
        {
            return base.Channel.GetTableForUpdateWithBigId(BigId);
        }
        
        public System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetTableForUpdateWithBigIdResponseGetTableForUpdateWithBigIdResult> GetTableForUpdateWithBigIdAsync(string BigId)
        {
            return base.Channel.GetTableForUpdateWithBigIdAsync(BigId);
        }
        
        public JetComSmsSync.Modules.Protractor.GetTransferedTablesDetailsResponseGetTransferedTablesDetailsResult GetTransferedTablesDetails(string BigId, int singleKey)
        {
            return base.Channel.GetTransferedTablesDetails(BigId, singleKey);
        }
        
        public System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetTransferedTablesDetailsResponseGetTransferedTablesDetailsResult> GetTransferedTablesDetailsAsync(string BigId, int singleKey)
        {
            return base.Channel.GetTransferedTablesDetailsAsync(BigId, singleKey);
        }
        
        public JetComSmsSync.Modules.Protractor.GetAllTempTableRecordsOfBigIdResponseGetAllTempTableRecordsOfBigIdResult GetAllTempTableRecordsOfBigId(string tblname, string BigId)
        {
            return base.Channel.GetAllTempTableRecordsOfBigId(tblname, BigId);
        }
        
        public System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetAllTempTableRecordsOfBigIdResponseGetAllTempTableRecordsOfBigIdResult> GetAllTempTableRecordsOfBigIdAsync(string tblname, string BigId)
        {
            return base.Channel.GetAllTempTableRecordsOfBigIdAsync(tblname, BigId);
        }
        
        public JetComSmsSync.Modules.Protractor.GetAllTempTableRecordsOfBigIdWithKeysResponseGetAllTempTableRecordsOfBigIdWithKeysResult GetAllTempTableRecordsOfBigIdWithKeys(string tblname, string BigId, string compareKeys)
        {
            return base.Channel.GetAllTempTableRecordsOfBigIdWithKeys(tblname, BigId, compareKeys);
        }
        
        public System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetAllTempTableRecordsOfBigIdWithKeysResponseGetAllTempTableRecordsOfBigIdWithKeysResult> GetAllTempTableRecordsOfBigIdWithKeysAsync(string tblname, string BigId, string compareKeys)
        {
            return base.Channel.GetAllTempTableRecordsOfBigIdWithKeysAsync(tblname, BigId, compareKeys);
        }
        
        public void ExecuteQueryWithOutCheck(string strQuery)
        {
            base.Channel.ExecuteQueryWithOutCheck(strQuery);
        }
        
        public System.Threading.Tasks.Task ExecuteQueryWithOutCheckAsync(string strQuery)
        {
            return base.Channel.ExecuteQueryWithOutCheckAsync(strQuery);
        }
        
        public JetComSmsSync.Modules.Protractor.GetQueriesResponseGetQueriesResult GetQueries(string AccountId)
        {
            return base.Channel.GetQueries(AccountId);
        }
        
        public System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetQueriesResponseGetQueriesResult> GetQueriesAsync(string AccountId)
        {
            return base.Channel.GetQueriesAsync(AccountId);
        }
        
        public JetComSmsSync.Modules.Protractor.GetAccountIDInfoResponseGetAccountIDInfoResult GetAccountIDInfo(string BigId)
        {
            return base.Channel.GetAccountIDInfo(BigId);
        }
        
        public System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetAccountIDInfoResponseGetAccountIDInfoResult> GetAccountIDInfoAsync(string BigId)
        {
            return base.Channel.GetAccountIDInfoAsync(BigId);
        }
        
        public bool ValidateAccount(string BidId)
        {
            return base.Channel.ValidateAccount(BidId);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateAccountAsync(string BidId)
        {
            return base.Channel.ValidateAccountAsync(BidId);
        }
        
        public JetComSmsSync.Modules.Protractor.GetConnectionIDAndAPIKeyResponseGetConnectionIDAndAPIKeyResult GetConnectionIDAndAPIKey(string BigID)
        {
            return base.Channel.GetConnectionIDAndAPIKey(BigID);
        }
        
        public System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetConnectionIDAndAPIKeyResponseGetConnectionIDAndAPIKeyResult> GetConnectionIDAndAPIKeyAsync(string BigID)
        {
            return base.Channel.GetConnectionIDAndAPIKeyAsync(BigID);
        }
        
        public JetComSmsSync.Modules.Protractor.GetLatestStartAndEndDateResponseGetLatestStartAndEndDateResult GetLatestStartAndEndDate(string BigID)
        {
            return base.Channel.GetLatestStartAndEndDate(BigID);
        }
        
        public System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetLatestStartAndEndDateResponseGetLatestStartAndEndDateResult> GetLatestStartAndEndDateAsync(string BigID)
        {
            return base.Channel.GetLatestStartAndEndDateAsync(BigID);
        }
        
        public JetComSmsSync.Modules.Protractor.GetAccountIDDetailResponseGetAccountIDDetailResult GetAccountIDDetail()
        {
            return base.Channel.GetAccountIDDetail();
        }
        
        public System.Threading.Tasks.Task<JetComSmsSync.Modules.Protractor.GetAccountIDDetailResponseGetAccountIDDetailResult> GetAccountIDDetailAsync()
        {
            return base.Channel.GetAccountIDDetailAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ProtractorServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ProtractorServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ProtractorServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://valueaddedonline.com/ProtractorWebService/ProtractorService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ProtractorServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://valueaddedonline.com/ProtractorWebService/ProtractorService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ProtractorServiceSoap,
            
            ProtractorServiceSoap12,
        }
    }
}
